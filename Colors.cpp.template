//
// Lightpad - Colors.cpp
// Created by Vinyl Darkscratch and Light Apacha, ©2017 Nightwave Studios.
//

// !!! Auto-generated by sample_colors.py from graphics/references/rgbcolors1.png and ...2.png, DO NOT MODIFY !!!

// Attempt to load precompiled, if compiler doesn't support then load normal
#include <wx/wxprec.h>
#ifndef WX_PRECOMP
	#include <wx/wx.h>
#endif

#include "Colors.h"

#include <stdio.h>
#include <math.h>

!XXX!

void convertRGBtoXYZ(int inR, int inG, int inB, float &outX, float &outY, float &outZ) {
    // http://www.easyrgb.com/index.php?X=MATH&H=02#text2

    CGFloat var_R = (inR / 255.0f); //R from 0 to 255
    CGFloat var_G = (inG / 255.0f); //G from 0 to 255
    CGFloat var_B = (inB / 255.0f); //B from 0 to 255

    if (var_R > 0.04045f) {
        var_R = powf(( (var_R + 0.055f) / 1.055f), 2.4f);
    } else {
        var_R = var_R / 12.92f;
    }

    if (var_G > 0.04045) {
        var_G = powf(( (var_G + 0.055f) / 1.055f), 2.4f);
    } else {
        var_G = var_G / 12.92f;
    }

    if (var_B > 0.04045f) {
        var_B = powf(( (var_B + 0.055f) / 1.055f), 2.4f);
    } else {
        var_B = var_B / 12.92f;
    }

    var_R = var_R * 100;
    var_G = var_G * 100;
    var_B = var_B * 100;

    //Observer. = 2°, Illuminant = D65
    outX = var_R * 0.4124f + var_G * 0.3576f + var_B * 0.1805f;
    outY = var_R * 0.2126f + var_G * 0.7152f + var_B * 0.0722f;
    outZ = var_R * 0.0193f + var_G * 0.1192f + var_B * 0.9505f;
}

unsigned char get_closest_velocity(wxColor c) {
	int best_match_index = 0;
	int best_match_value = 1024;
	for (int i = 0; i < COLORCOUNT; i++) {
	    // http://www.easyrgb.com/index.php?X=MATH&H=02#text2

		int d = sqrt(
			pow(velocitycolors[i].Red()-c.Red(), 2)
			+ pow(velocitycolors[i].Green()-c.Green(), 2)
			+ pow(velocitycolors[i].Blue()-c.Blue(), 2)
		);
		if (d < best_match_value) {
			best_match_index = i;
			best_match_value = d;
		}
		//std::cout << i << " - " << d << std::endl;
	}

	return best_match_index;
};

// int main() {
// 	int v = get_closest_velocity(wxColor(255, 255, 255));
// 	std::cout << "Best Match: " << v << std::endl;
// }
